<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myArrow = true;
fake = false;
myWidth = 0;
myHeight = 0;
myColor = c_white;
myText = " ";
myTextCol = c_black;
myGUI = noone;
myFont = fontNormal;
myType = 0; //zero is button
myStateChange = true;
myPressed = false;
myReleased = false;
myPressedCol = c_dkgray;
myTextStretched = false;
myTextPos = 5;
//butID.mySprite = -1;
mySpritePos = GUI_SPRITE_CENTER;
myOnlyText = false;
myCornerRadius = 10;
myAlpha_Back = 1;
myAlpha_Border = 1;
myAlpha_Text = 1;
myCustomScript = " ";
type = GUI_TYPE_BUTTON;

image_speed = 0;

ELID = 0;

tooltip = "";

//input box stuff.
myInputBox = false;
myInput = false;
myInputType = INPUT_TYPE_INT;
myInputValueInt = 0;
myInputMin = 0;
myInputMax = 999;
myInputLength = 15;
myCursor = 1;
myInputString = "";
myAllowSpace = true;

// check box
myCheckBox = false;
myChecked = false;

// selection box
mySelection = false;
mySelectionParent = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>guiButtonStepCode();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (myInput == true &amp;&amp; keyboard_check_pressed(keyboard_key)) {
    if (keyboard_check_pressed(vk_left)) {
        if (myCursor &gt; 1) myCursor--;
        myStateChange = true;
        exit;
    }
    else if (keyboard_check_pressed(vk_right)) {
        if (myCursor &lt; string_length(myInputString) + 1) myCursor++;
        myStateChange = true;
        exit;
    }
    
    if (keyboard_check_pressed(vk_backspace) &amp;&amp; myCursor &gt; 1) {
        myInputString = string_delete(myInputString, myCursor-1, 1);
        myCursor--;
        exit;
    }
    
    if (keyboard_check_pressed(vk_delete) &amp;&amp; myCursor &lt; string_length(myInputString) + 1) {
        myInputString = string_delete(myInputString, myCursor, 1);
        myCursor = min(string_length(myInputString) + 1, myCursor);
        exit;
    }
    
    if (myInputType == INPUT_TYPE_INT) {
        if (keyboard_key &gt;= ord('0') &amp;&amp; keyboard_key &lt;= ord('9') &amp;&amp; keyboard_lastkey != -1) {
            myInputString = string_insert(keyboard_lastchar, myInputString, myCursor);
            keyboard_key = -1;
            keyboard_lastchar = '';
            myCursor++;
        }
        myInputValueInt = clamp(real(string_digits(myInputString)), myInputMin, myInputMax);
        myText = string(myInputValueInt);
        myInputString = myText;
        myStateChange = true;
        
    }
    else if (myInputType == INPUT_TYPE_STRING) {
        if (keyboard_key &gt;= 32 &amp;&amp; keyboard_key &lt;= 127 &amp;&amp; keyboard_lastkey != -1) {
            if (keyboard_key = vk_space &amp;&amp; myAllowSpace == false)
                exit;
            myInputString = string_insert(keyboard_lastchar, myInputString, myCursor);
            keyboard_key = -1;
            keyboard_lastchar = '';
            myCursor++;
        }
        myText = string_copy(myInputString, 1, min(myInputLength, string_length(myInputString)));
        myInputString = myText;
        myStateChange = true;
    }
    
    myCursor = min(string_length(myInputString) + 1, myCursor);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw tooltips
var mx = mouse_x - view_xview;
var my = mouse_y - view_yview;

if (gui_focus == myGUI &amp;&amp; string_length(tooltip) &gt; 1 &amp;&amp;
    point_in_rectangle(mx, my, x, y, x + myWidth, y + myHeight)) {
    drawTooltip(tooltip);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// don't draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
